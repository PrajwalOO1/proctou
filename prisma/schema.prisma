generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String        @id @default(cuid())
  name      String
  email     String        @unique
  password  String
  role      Role          @default(STUDENT)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  exams     Exam[]        @relation("ExamCreator")
  attempts  ExamAttempt[]
}

model Exam {
  id          String        @id @default(cuid())
  title       String
  description String?
  type        ExamType
  status      ExamStatus    @default(DRAFT)
  duration    Int // in minutes
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  creator     User          @relation("ExamCreator", fields: [creatorId], references: [id])
  creatorId   String
  questions   Question[]
  attempts    ExamAttempt[]
}

model Question {
  id        String       @id @default(cuid())
  content   String
  type      QuestionType
  options   String[] // For multiple choice questions
  answer    String
  points    Int          @default(1)
  exam      Exam         @relation(fields: [examId], references: [id])
  examId    String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  Answer    Answer[]
}

model ExamAttempt {
  id        String        @id @default(cuid())
  exam      Exam          @relation(fields: [examId], references: [id])
  examId    String
  user      User          @relation(fields: [userId], references: [id])
  userId    String
  score     Float?
  status    AttemptStatus @default(IN_PROGRESS)
  startedAt DateTime      @default(now())
  endedAt   DateTime?
  answers   Answer[]
}

model Answer {
  id         String      @id @default(cuid())
  question   Question    @relation(fields: [questionId], references: [id])
  questionId String
  attempt    ExamAttempt @relation(fields: [attemptId], references: [id])
  attemptId  String
  content    String
  isCorrect  Boolean?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

enum ExamType {
  QUIZ
  CODING
  EXAM
}

enum ExamStatus {
  DRAFT
  PUBLISHED
  COMPLETED
}

enum QuestionType {
  MULTIPLE_CHOICE
  SHORT_ANSWER
  CODING
}

enum AttemptStatus {
  IN_PROGRESS
  COMPLETED
  TIMED_OUT
}
